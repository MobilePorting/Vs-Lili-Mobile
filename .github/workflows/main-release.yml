name: Main + Release
on: workflow_dispatch
jobs:
  Windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Libraries
        run: |
          haxelib setup C:\haxelib
          haxelib install hmm --quiet
          haxelib run hmm install --quiet

      - name: Compile
        run: haxelib run lime build windows -final

      - name: Make Zip For Release
        shell: pwsh
        run: Compress-Archive -Path 'export\release\windows\bin\*' -DestinationPath 'export\release\windows\bin\VsLili-Windows.zip'

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export\release\windows\bin\*.zip
          if-no-files-found: error
  Linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib install hmm --quiet
          haxelib run hmm install --quiet

      - name: Compile
        run: haxelib run lime build linux -final

      - name: Make Tar For Release
        run: tar czf export/release/linux/bin/VsLili-Linux.tar.gz export/release/linux/bin/*

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: linuxBuild
          path: export/release/linux/bin/*.tar
          if-no-files-found: error
  macOS:
    runs-on: macos-${{matrix.version}}
    strategy:
      matrix:
        version: [11, 12, 13]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib install hmm --quiet
          haxelib run hmm install --quiet

      - name: Compile
        run: haxelib run lime build mac -final

      - name: Make Tar For Release
        run: tar czf export/release/macos/bin/VsLili-macOS${{matrix.version}}.tar.gz export/release/macos/bin/*

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: macOSBuild-${{matrix.version}}
          path: export/release/macos/bin/*.tar
          if-no-files-found: error
  Android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib install hmm --quiet
          haxelib run hmm install --quiet

      - name: Configure Android
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Compile
        run: haxelib run lime build android -final

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk
          if-no-files-found: error
  iOS:
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib install hmm --quiet
          haxelib run hmm install --quiet

      - name: Compile
        run: haxelib run lime build ios -D NOVIDEO -final

      - name: Make Ipa
        run: |
          cd export/release/ios/build/*-iphoneos
          mkdir Payload
          mv *.app Payload
          zip -r VsLili.ipa Payload

      - name: Make Zip For Release
        run: |
           cd export/release/ios/build/Release-iphoneos
           zip VsLili-iOS.zip VsLili.ipa

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: iOSBuild
          path: export/release/ios/build/Release-iphoneos/*.zip
          if-no-files-found: error
